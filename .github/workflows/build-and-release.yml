name: "BuildArm64 And Release"

on:
  push:
    branches:
      - build-arm64

jobs:
  buildArm64-and-upload:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [
          16,
          17
        ]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4.1.7

      - name: "Setup Node.js environment"
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://npm.pkg.github.com/

      - name: "Get package info"
        id: package-info
        uses: luizfelipelaviola/get-package-info@v1
        with:
          path: ./packages/mitmproxy

      - name: "Print"
        run: |
          echo "version = ${{ steps.package-info.outputs.version }}";
          echo "github.ref_type = ${{ github.ref_type }}";
          echo "github.ref = ${{ github.ref }}";
          echo "github.ref_name = ${{ github.ref_name }}";

      - name: "build native modules using another arch"
        uses: uraimo/run-on-arch-action@v2.3.0
        with:
          arch: aarch64
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/build"
            --volume "/home/runner:/home/runner"
          install: |
            apt-get update && apt-get install curl -y
            curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
            apt-get install -y nodejs gcc g++ make
            apt update && apt install python3 -y
            corepack enable
          run: |
            uname -a
#            chmod -R 777 /build
#            cd /build
#            pnpm config set store-dir /home/runner/.local/share/pnpm/store/v3
#            pnpm install
#            cd icalingua
#            pnpm build:electron install-app-deps

      - name: "npm install -g lerna@6/yarn"
        run: |
          echo "======================================================================";
          echo "npm install -g lerna@6";
          echo "--------------------";
          npm install -g lerna@6;

          echo "======================================================================";
          echo "npm install -g yarn";
          echo "--------------------";
          npm install -g yarn;

      - name: "npm -v | yarn -v | lerna -v"
        run: |
          echo "======================================================================";
          echo "node -p 'process.arch'";
          echo "--------------------";
          node -p "process.arch";

          echo "======================================================================";
          echo "npm -v";
          echo "--------------------";
          npm -v;

          echo "======================================================================";
          echo "yarn -v";
          echo "--------------------";
          yarn -v;

          echo "======================================================================";
          echo "lerna -v";
          echo "--------------------";
          lerna -v;

      - name: "lerna bootstrap"
        run: |
          echo "======================================================================";
          dir || ls -lah;

          echo "======================================================================";
          echo "lerna bootstrap --npm-client=yarn";
          echo "--------------------";
          lerna bootstrap --npm-client=yarn;

      - name: "npm run electron:build --arm64 for node16"
        if: ${{ matrix.node == '16' }}
        run: |
          echo "======================================================================";
          echo "cd packages/gui";
          echo "--------------------";
          cd packages/gui;
          dir || ls -lah;

          echo "======================================================================";
          echo "npm run electron:build --arm64";
          echo "--------------------";
          npm run electron:build --arm64;

          echo "======================================================================";
          echo "cd dist_electron";
          echo "--------------------";
          cd dist_electron;
          dir || ls -lah;

          echo "======================================================================";
          echo "cd ../../../";
          echo "--------------------";
          cd ../../../;
          dir || ls -lah;

      - name: "npm run electron:build --arm64 for node17"
        if: ${{ matrix.node != '16' }}
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          echo "======================================================================";
          echo "cd packages/gui";
          echo "--------------------";
          cd packages/gui;
          dir || ls -lah;

          echo "======================================================================";
          echo "npm run electron:build --arm64";
          echo "--------------------";
          npm run electron:build --arm64;

          echo "======================================================================";
          echo "cd dist_electron";
          echo "--------------------";
          cd dist_electron;
          dir || ls -lah;

          echo "======================================================================";
          echo "cd ../../../";
          echo "--------------------";
          cd ../../../;
          dir || ls -lah;

      - name: "Upload DevSidecar-${{ steps.package-info.outputs.version }}-node${{ matrix.node }}.deb - Ubuntu"
        uses: actions/upload-artifact@v4.4.0
        with:
          path: packages/gui/dist_electron/DevSidecar-${{ steps.package-info.outputs.version }}.deb
          name: "DevSidecar-${{ steps.package-info.outputs.version }}-node${{ matrix.node }}.deb"
          if-no-files-found: error
      - name: "Upload DevSidecar-${{ steps.package-info.outputs.version }}-node${{ matrix.node }}.AppImage - Ubuntu"
        uses: actions/upload-artifact@v4.4.0
        with:
          path: packages/gui/dist_electron/DevSidecar-${{ steps.package-info.outputs.version }}.AppImage
          name: "DevSidecar-${{ steps.package-info.outputs.version }}-node${{ matrix.node }}.AppImage"
          if-no-files-found: error
